uniform mat4 modelViewProjectionMatrix;
uniform mat4 normalMatrix;

uniform float time;
uniform float speed;

uniform vec3 normal;

varying float normalZ;
varying vec2 vTexCoord;

attribute vec4 vertex;
attribute vec2 texCoord;

void main () {
	vTexCoord = texCoord;

	float angle = -time*speed;
	mat3 rot = mat3(vec3(cos(angle), 0.0, sin(angle)),
						vec3(0.0, 1.0, 0.0),
						vec3(-sin(angle), 0.0, cos(angle)));
						
	normalZ = normalize(mat3(normalMatrix) * (rot * normal)).z;
	
	float dist = 0.1;
	gl_Position = modelViewProjectionMatrix * vec4(rot * (vertex.xyz + normal*dist/2.0 + normal*dist/2.0*sin(time*1.5)), 1.0);
}
